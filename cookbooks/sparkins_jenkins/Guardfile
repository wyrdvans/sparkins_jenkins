# A sample Guardfile
# More info at https://github.com/guard/guard#readme

## Uncomment and set this to only include directories you want to watch
# directories %(app lib config test spec feature)

## Uncomment to clear the screen before every task
# clearing :on

# Note: The cmd option is now required due to the increasing number of ways
#       rspec may be run, below are examples of the most common uses.
#  * bundler: 'bundle exec rspec'
#  * bundler binstubs: 'bin/rspec'
#  * spring: 'bin/rsspec' (This will use spring if running and you have
#                          installed the spring binstubs per the docs)
#  * zeus: 'zeus rspec' (requires the server to be started separetly)
#  * 'just' rspec: 'rspec'
guard :rspec, cmd: 'rspec --fail-fast' do
  watch(%r{^spec/(.+)_spec\.rb$})
  watch(%r{^recipes/(.+)\.rb$}) { |m| "spec/unit/recipes/#{m[1]}_spec.rb" }
  watch('spec/spec_helper.rb') { "spec" }
  watch(%r{^spec/helpers/.+\.rb$}) { "spec" } 
  watch(%r{^attributes/.+\.rb$}) { "spec" }
  watch(%r{^providers/.+\.rb$}) { "spec" }
  watch(%r{^resources/.+\.rb$}) { "spec" }
  watch(%r{^templates/.+}) { "spec" }
end

# guard "foodcritic", :cookbook_paths => ".", :cli => "--epic-fail correctness" do  
#   watch(%r{attributes/.+\.rb$})
#   watch(%r{providers/.+\.rb$})
#   watch(%r{recipes/.+\.rb$})
#   watch(%r{resources/.+\.rb$})
#   watch(%r{^templates/(.+)})
#   watch('metadata.rb')
# end  

# guard 'kitchen' do  
#   watch(%r{test/.+})
#   watch(%r{^recipes/(.+)\.rb$})
#   watch(%r{^attributes/(.+)\.rb$})
#   watch(%r{^files/(.+)})
#   watch(%r{^templates/(.+)})
#   watch(%r{^providers/(.+)\.rb})
#   watch(%r{^resources/(.+)\.rb})
# end  
